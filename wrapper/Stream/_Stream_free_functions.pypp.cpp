// This file has been generated by Py++.

// (C) Christopher Woods, GPL >= 2 License

#include "boost/python.hpp"
#include "_Stream_free_functions.pypp.hpp"

namespace bp = boost::python;

#include "SireError/errors.h"

#include "SireStream/errors.h"

#include "SireStream/version_error.h"

#include "registeralternativename.h"

#include "shareddatastream.h"

#include "streamdata.hpp"

#include "tostring.h"

#include <QByteArray>

#include <QDataStream>

#include <QDebug>

#include <QFile>

#include <QList>

#include <QMutex>

#include <QProcess>

#include <QSysInfo>

#include <QtGlobal>

#include <boost/config.hpp>

#include <cstdlib>

#include <memory>

#include <unistd.h>

#include "streamdata.hpp"

#include "SireError/errors.h"

#include "SireStream/errors.h"

#include "SireStream/version_error.h"

#include "registeralternativename.h"

#include "shareddatastream.h"

#include "streamdata.hpp"

#include "tostring.h"

#include <QByteArray>

#include <QDataStream>

#include <QDebug>

#include <QFile>

#include <QList>

#include <QMutex>

#include <QProcess>

#include <QSysInfo>

#include <QtGlobal>

#include <boost/config.hpp>

#include <cstdlib>

#include <memory>

#include "streamdata.hpp"

#include "SireError/errors.h"

#include "SireStream/errors.h"

#include "SireStream/version_error.h"

#include "registeralternativename.h"

#include "shareddatastream.h"

#include "streamdata.hpp"

#include "tostring.h"

#include <QByteArray>

#include <QDataStream>

#include <QDebug>

#include <QFile>

#include <QList>

#include <QMutex>

#include <QProcess>

#include <QSysInfo>

#include <QtGlobal>

#include <boost/config.hpp>

#include <cstdlib>

#include <memory>

#include "streamdata.hpp"

#include "SireError/errors.h"

#include "SireStream/errors.h"

#include "SireStream/version_error.h"

#include "registeralternativename.h"

#include "shareddatastream.h"

#include "streamdata.hpp"

#include "tostring.h"

#include <QByteArray>

#include <QDataStream>

#include <QDebug>

#include <QFile>

#include <QList>

#include <QMutex>

#include <QProcess>

#include <QSysInfo>

#include <QtGlobal>

#include <boost/config.hpp>

#include <cstdlib>

#include <memory>

#include "streamdata.hpp"

void register_free_functions(){

    { //::SireStream::getDataHeader
    
        typedef ::SireStream::FileHeader ( *getDataHeader_function_type )( ::QByteArray const & );
        getDataHeader_function_type getDataHeader_function_value( &::SireStream::getDataHeader );
        
        bp::def( 
            "getDataHeader"
            , getDataHeader_function_value
            , ( bp::arg("data") )
            , "" );
    
    }

    { //::SireStream::getDataHeader
    
        typedef ::SireStream::FileHeader ( *getDataHeader_function_type )( ::QString const & );
        getDataHeader_function_type getDataHeader_function_value( &::SireStream::getDataHeader );
        
        bp::def( 
            "getDataHeader"
            , getDataHeader_function_value
            , ( bp::arg("filename") )
            , "" );
    
    }

    { //::SireStream::getLibraryVersion
    
        typedef ::quint32 ( *getLibraryVersion_function_type )( ::QString const & );
        getLibraryVersion_function_type getLibraryVersion_function_value( &::SireStream::getLibraryVersion );
        
        bp::def( 
            "getLibraryVersion"
            , getLibraryVersion_function_value
            , ( bp::arg("library") )
            , "" );
    
    }

    { //::SireStream::getMinimumSupportedVersion
    
        typedef ::quint32 ( *getMinimumSupportedVersion_function_type )( ::QString const & );
        getMinimumSupportedVersion_function_type getMinimumSupportedVersion_function_value( &::SireStream::getMinimumSupportedVersion );
        
        bp::def( 
            "getMinimumSupportedVersion"
            , getMinimumSupportedVersion_function_value
            , ( bp::arg("library") )
            , "" );
    
    }

}
